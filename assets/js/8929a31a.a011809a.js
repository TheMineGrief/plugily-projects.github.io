(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{108:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return o})),r.d(t,"toc",(function(){return l})),r.d(t,"default",(function(){return p}));var a=r(3),n=r(7),b=(r(0),r(162)),c={id:"scoreboard",title:"Scoreboard",sidebar_label:"Scoreboard"},o={unversionedId:"thebridge/placeholders/scoreboard",id:"thebridge/placeholders/scoreboard",isDocsHomePage:!1,title:"Scoreboard",description:"---",source:"@site/docs/thebridge/placeholders/scoreboard.md",slug:"/thebridge/placeholders/scoreboard",permalink:"/thebridge/placeholders/scoreboard",editUrl:"https://github.com/Plugily-Projects/plugily-projects.github.io/blob/documentation/docs/thebridge/placeholders/scoreboard.md",version:"current",lastUpdatedBy:"Tigerpanzer_02",lastUpdatedAt:1614471297,formattedLastUpdatedAt:"2/28/2021",sidebar_label:"Scoreboard",sidebar:"docs",previous:{title:"PlaceholderAPI",permalink:"/thebridge/placeholders/placeholderapi"},next:{title:"Developer API",permalink:"/thebridge/development/api"}},l=[],i={toc:l};function p(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(b.b)("wrapper",Object(a.a)({},i,r,{components:t,mdxType:"MDXLayout"}),Object(b.b)("hr",null),Object(b.b)("p",null,"Find your variable for the ingame scoreboard"),Object(b.b)("p",null,"These are the ",Object(b.b)("strong",{parentName:"p"},"internal")," placeholders for TheBridge. They are included with the plugin, so you do not have to download them."),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",{parentName:"tr",align:"center"},"Variable"),Object(b.b)("th",{parentName:"tr",align:"center"},"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"center"},"%MIN","_","PLAYERS%"),Object(b.b)("td",{parentName:"tr",align:"center"},"Minimum players size")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"center"},"%PLAYERS%"),Object(b.b)("td",{parentName:"tr",align:"center"},"Size of all players in arena")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"center"},"%PLAYERS","_","LEFT%"),Object(b.b)("td",{parentName:"tr",align:"center"},"Size of alive players in arena")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"center"},"%TIME%"),Object(b.b)("td",{parentName:"tr",align:"center"},"Current arena timer ","(","ex. 10 seconds before start",")")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"center"},"%FORMATTED","_","TIME%"),Object(b.b)("td",{parentName:"tr",align:"center"},"Returns time formatted")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"center"},"%ARENA","_","NAME%"),Object(b.b)("td",{parentName:"tr",align:"center"},"Returns arena name")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"center"},"%ARENA","_","ID%"),Object(b.b)("td",{parentName:"tr",align:"center"},"Returns arena id")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"center"},"%BASES%"),Object(b.b)("td",{parentName:"tr",align:"center"},"Returns all bases formatted")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"center"},"%BASE","_","COLOR%"),Object(b.b)("td",{parentName:"tr",align:"center"},"Returns players base color")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"center"},"%BASE%"),Object(b.b)("td",{parentName:"tr",align:"center"},"Returns base name ","(","color name",")")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"center"},"%BASE","_","FORMATTED%"),Object(b.b)("td",{parentName:"tr",align:"center"},"Returns base name colored like you want ","(","See Bases.Color",")")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"center"},"%BASE","_","PLAYERS%"),Object(b.b)("td",{parentName:"tr",align:"center"},"Returns players on team")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"center"},"%BASE","_","YOU%"),Object(b.b)("td",{parentName:"tr",align:"center"},"Returns Scoreboard.Bases.Inside if you are on that base")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"center"},"%FORMATTED","_","POINTS%"),Object(b.b)("td",{parentName:"tr",align:"center"},"It multiplies and set colors for the points ","(","See Scoreboard.Mode",")")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"center"},"%MODE","_","VALUE%"),Object(b.b)("td",{parentName:"tr",align:"center"},"Returns the value player needs to win")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"center"},"%MODE%"),Object(b.b)("td",{parentName:"tr",align:"center"},"Returns the mode that player plays")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"center"},"%RESET","_","BLOCKS%"),Object(b.b)("td",{parentName:"tr",align:"center"},"Returns after how many rounds the blocks got reset")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"center"},"%ONLYIFRESETBLOCKS%"),Object(b.b)("td",{parentName:"tr",align:"center"},"Hides the line if resetblocks is disabled")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"center"},"%LOCAL","_","KILLS%"),Object(b.b)("td",{parentName:"tr",align:"center"},"Returns kills at that round")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"center"},"%LOCAL","_","SCORED","_","POINTS%"),Object(b.b)("td",{parentName:"tr",align:"center"},"Returns mode points at that round")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",{parentName:"tr",align:"center"},"%LOCAL","_","DEATHS%"),Object(b.b)("td",{parentName:"tr",align:"center"},"Returns deaths at that round")))),Object(b.b)("p",null,"You can also use the ",Object(b.b)("a",{parentName:"p",href:"https://www.spigotmc.org/wiki/placeholderapi-placeholders/"},Object(b.b)("strong",{parentName:"a"},"placeholders")," "),"from ",Object(b.b)("a",{parentName:"p",href:"https://www.spigotmc.org/resources/placeholderapi.6245/"},Object(b.b)("strong",{parentName:"a"},"PlaceholderAPI")),"."))}p.isMDXComponent=!0},162:function(e,t,r){"use strict";r.d(t,"a",(function(){return d})),r.d(t,"b",(function(){return O}));var a=r(0),n=r.n(a);function b(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){b(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},b=Object.keys(e);for(a=0;a<b.length;a++)r=b[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(a=0;a<b.length;a++)r=b[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=n.a.createContext({}),p=function(e){var t=n.a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=p(e.components);return n.a.createElement(i.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},m=n.a.forwardRef((function(e,t){var r=e.components,a=e.mdxType,b=e.originalType,c=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),d=p(r),m=a,O=d["".concat(c,".").concat(m)]||d[m]||s[m]||b;return r?n.a.createElement(O,o(o({ref:t},i),{},{components:r})):n.a.createElement(O,o({ref:t},i))}));function O(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var b=r.length,c=new Array(b);c[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,c[1]=o;for(var i=2;i<b;i++)c[i]=r[i];return n.a.createElement.apply(null,c)}return n.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"}}]);